name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '24 12 * * *'
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Deploy image on heroku
      - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
          uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
          with:
            # Below you must provide variables for your Heroku app.

            # The email address associated with your Heroku account.
            # If you don't want to use repository secrets (which is recommended) you can do:
            # email: my.email@example.com
            email: ${{ secrets.HEROKU_EMAIL }}

            # Heroku API key associated with provided user's email.
            # Api Key is available under your Heroku account settings.
            heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

            # Name of the heroku application to which the build is to be sent.
            heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

            # (Optional, default: "./")
            # Dockerfile directory.
            # For example, if you have a Dockerfile in the root of your project, leave it as follows:
            dockerfile_directory: ./

            # (Optional, default: "Dockerfile")
            # Dockerfile name.
            dockerfile_name: Dockerfile

            # (Optional, default: "")
            # Additional options of docker build command.
            docker_options: "--no-cache"

            # (Optional, default: "web")
            # Select the process type for which you want the docker container to be uploaded.
            # By default, this argument is set to "web".
            # For more information look at https://devcenter.heroku.com/articles/process-model
            process_type: web
